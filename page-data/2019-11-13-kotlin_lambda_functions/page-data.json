{"componentChunkName":"component---src-components-post-js","path":"/2019-11-13-kotlin_lambda_functions","result":{"data":{"markdownRemark":{"html":"<p>Lambda functions are anonymous functions that can be assigned to a variable and passed around like any other value.  Lambdas are super useful and convenient as they allow you to write a less code, while also improving the readability of your codebase by removing extra boilerplate. </p>\n<pre><code class=\"language-kotlin\">val add: (Int, Int) -> Int = { x, y -> x + y }\n\nval addition = { x, y : -> x + y }\n</code></pre>\n<p>The two lambdas above take in two <code>Int</code> parameters and return an <code>Int</code>.\nThe second lambda takes advantage of type inference, and can be even shorter. </p>\n<p>If a lambda only takes in 1 parameter, you can shorten it further by using the reserved <code>it</code>  keyword: </p>\n<pre><code class=\"language-kotlin\">val double = { 2 * it }\n\nval square = { it * it }\n</code></pre>\n<p>Using lambdas allow us to simplify more complex functions. Wihout lambda: </p>\n<pre><code class=\"language-kotlin\">interface Callback {\n  fun onCallback(result: String)\n}\n\nfun doAsync(x : Int, callback: Callback) {\n  callback.onCallback(\"done\")\n}\n\ndoAsync(20, object : Callback {\n  override fun onCallback(result: String) {\n    print(result)\n  }\n}\n</code></pre>\n<p>With lambda:</p>\n<pre><code class=\"language-kotlin\">fun doAsync (x : Int, callback: (String) -> Unit) {\n  callback(\"done\")\n}\n\ndoAsync(20) { result -> print(result)}\n</code></pre>\n<p>Iterating over collections also becomes really easy with the help of lambdas: </p>\n<pre><code class=\"language-kotlin\">var allItems = listOf(1.99, 2.50, 7.49, 9.99, 25.0)\n\nval priceyItems = prices.filter { it > 5.0 } \n</code></pre>\n<p>Lambdas can help in making your codebase more reusable, succint and easier to mantain. </p>\n<p>To learn more about Lambdas see <a href=\"https://kotlinlang.org/docs/reference/lambdas.html\">Higher-Order Functions and Lambdas - Kotlin Programming Language</a></p>","frontmatter":{"title":"Kotlin Lambda Functions","date":"November 13th, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"pathSlug":"/2019-11-13-kotlin_lambda_functions"}}}